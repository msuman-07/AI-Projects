'''
  1. Number of times pregnant
  2. Plasma glucose concentration a 2 hours in an oral glucose tolerance test
  3. Diastolic blood pressure (mm Hg)
  4. Triceps skin fold thickness (mm)
  5. 2-Hour serum insulin (mu U/ml)
  6. Body mass index (weight in kg/ (height in m)^2)
  7. Diabetes pedigree function
  8. Age (years)
  9. Class variable (0 or 1)
'''


from numpy import loadtxt
from keras.models import Sequential
from keras.layers import Dense, Input
from keras.models import model_from_json

# Load dataset
dataset = loadtxt("pima-indians-diabetes.csv", delimiter=',')

# Split dataset into input (X) and output (Y)
x = dataset[:, 0:8]  # Input features
y = dataset[:, 8]    # Output label

# Define the model with explicit Input layer
model = Sequential([
    Input(shape=(8,)),
    Dense(12, activation='relu'),
    Dense(8, activation='relu'),
    Dense(1, activation='sigmoid')
])

# Compile the model
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])

# Train the model
model.fit(x, y, epochs=10, batch_size=10)

# Evaluate the model
loss, accuracy = model.evaluate(x, y)
print('Accuracy: %.2f' % (accuracy * 100))

# Save model to JSON
model_json = model.to_json()
with open("model.json", "w") as json_file:
    json_file.write(model_json)

# Save weights with correct file extension
model.save_weights("model.weights.h5")

print("Saved model to disk")
